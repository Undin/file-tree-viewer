buildscript {
    ext.kotlin_version = '1.1.4'

    repositories {
        jcenter()
    }
    dependencies {
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:' + kotlin_version
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.1'
    }
}

apply plugin: 'kotlin'
apply plugin: 'com.github.johnrengelman.shadow'

repositories {
    jcenter()
}

shadowJar {
    classifier = null
    manifest {
        attributes 'Main-Class': 'com.warrior.jetbrains.test.FileViewer'
    }
}

afterEvaluate {
    if (it.hasProperty('test')) {
        test {
            testLogging {
                events "passed", "skipped", "failed"
                exceptionFormat = 'full'
            }
            afterSuite { desc, result ->
                if (!desc.parent) {
                    def output = "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
                    println("\n$output\n")
                }
            }
        }
    }
}

dependencies {
    compile 'org.jetbrains.kotlin:kotlin-stdlib-jre8:' + kotlin_version
    compile 'org.apache.logging.log4j:log4j-core:2.8.2'
    compile 'org.apache.commons:commons-vfs2:2.1'
    compile 'commons-httpclient:commons-httpclient:3.1'
    compile 'commons-net:commons-net:3.3'
    compile 'com.google.guava:guava:23.0'
    compile 'com.miglayout:miglayout-swing:5.0'

    testCompile 'junit:junit:4.12'
    testCompile 'org.assertj:assertj-core:3.8.0'
    testCompile 'org.mockftpserver:MockFtpServer:2.7.1'
    testCompile 'org.mockito:mockito-core:2.9.0'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
